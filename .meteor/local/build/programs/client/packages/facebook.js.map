)]}'
{"version":3,"file":"/packages/facebook.js","sources":["facebook/facebook_configure.html","facebook/facebook_configure.js","facebook/facebook_client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gtB;;;;;;;;;;;;;;;;;;;ACAA,uE;AACA,8B;AACA,E;;AAEA,sE;AACA,U;AACA,yC;AACA,6C;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;ACTA,c;;AAEA,4C;AACA,E;AACA,4B;AACA,mF;AACA,4E;AACA,W;AACA,oF;AACA,qD;AACA,4E;AACA,gD;AACA,iB;AACA,G;;AAEA,kF;AACA,gB;AACA,2I;AACA,W;AACA,G;;AAEA,oC;AACA,sF;AACA,2C;;AAEA,sB;AACA,4C;AACA,iD;;AAEA,gB;AACA,2E;AACA,wE;AACA,gF;;AAEA,oF;AACA,E","sourcesContent":["Template.__define__(\"configureLoginServiceDialogForFacebook\",Package.handlebars.Handlebars.json_ast_to_func([\"<p>\\n    First, you'll need to register your app on Facebook. Follow these steps:\\n  </p>\\n  <ol>\\n    <li>\\n      Visit <a href=\\\"https://developers.facebook.com/apps\\\" target=\\\"_blank\\\">https://developers.facebook.com/apps</a>\\n    </li>\\n    <li>\\n      Create New App (Only a name is required.)\\n    </li>\\n    <li>\\n      Set \\\"Sandbox Mode\\\" to \\\"Disabled\\\"\\n    </li>\\n    <li>\\n      Under \\\"Select how your app integrates with Facebook\\\", expand \\\"Website with Facebook Login\\\".\\n    </li>\\n    <li>\\n      Set Site URL to: <span class=\\\"url\\\">\",[\"{\",[[0,\"siteUrl\"]]],\"</span>\\n    </li>\\n  </ol>\"]));\n","Template.configureLoginServiceDialogForFacebook.siteUrl = function () {\n  return Meteor.absoluteUrl();\n};\n\nTemplate.configureLoginServiceDialogForFacebook.fields = function () {\n  return [\n    {property: 'appId', label: 'App ID'},\n    {property: 'secret', label: 'App Secret'}\n  ];\n};","Facebook = {};\n\n// Request Facebook credentials for the user\n//\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nFacebook.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({service: 'facebook'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError(\"Service not configured\"));\n    return;\n  }\n\n  var credentialToken = Random.id();\n  var mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent);\n  var display = mobile ? 'touch' : 'popup';\n\n  var scope = \"email\";\n  if (options && options.requestPermissions)\n    scope = options.requestPermissions.join(',');\n\n  var loginUrl =\n        'https://www.facebook.com/dialog/oauth?client_id=' + config.appId +\n        '&redirect_uri=' + Meteor.absoluteUrl('_oauth/facebook?close') +\n        '&display=' + display + '&scope=' + scope + '&state=' + credentialToken;\n\n  Oauth.initiateLogin(credentialToken, loginUrl, credentialRequestCompleteCallback);\n};\n"]}